---
title: "project 4"
output: 
  flexdashboard::flex_dashboard:
    orientation: columns
    source_code: embed
    vertical_layout: fill
    theme:
      version: 5
      bootswatch: minty
runtime: shiny
---

```{r setup, include=FALSE}
library(flexdashboard)
library(ggplot2)
library(dplyr)
library(tidyverse)
library(DT)
library(shiny)
```

```{r global}
# load the data here 
# here is the detailed code for loading and saving the data: https://github.com/jhu-statprogramming-fall-2023/biostat777-project4-YGAO0114/blob/main/data_loading%26analysis.Rmd
df19_file_path <- "data/df19_1_nogeo.csv"
df19 <- read.csv(df19_file_path, header = TRUE)
df18_file_path <- "data/df18_1_nogeo.csv"
df18 <- read.csv(df18_file_path, header = TRUE)
df17_file_path <- "data/df17_1_nogeo.csv"
df17 <- read.csv(df17_file_path, header = TRUE)
df16_file_path <- "data/df16_1_nogeo.csv"
df16 <- read.csv(df16_file_path, header = TRUE)
combined_df <- rbind(df16, df17, df18, df19)
```


# About {data-orientation=rows}
## column
### Data 
Part 1: Identify the data

  - The data is from [tidycensus](https://walker-data.com/tidycensus/articles/spatial-data.html).
  - For the following task, all the code can be found here: [part 1 code](https://github.com/jhu-statprogramming-fall-2023/biostat777-project4-YGAO0114/blob/main/data_loading%26analysis.Rmd)
  
    - Test if a directory named data exists locally. If it does not, write an R function that creates it programmatically.
    - Save the data only once.
    - Read in the data locally each time you knit/render.


### Purpose of this dashboard

This dashboard is designed to analyze the annual trends in median earnings and higher education enrollment across all states in the United States from 2016 to 2019. It aims to provide a comprehensive overview of the evolving landscape of educational attainment and income levels during this period, offering insights into the nationwide patterns and variations in these key socio-economic indicators.


##  Column
### YouTube Vedio

# The Data {data-orientation=rows}

## Column {data-width = 200}

The data is from [tidycensus](https://walker-data.com/tidycensus/articles/spatial-data.html). The selected data from the TidyCensus package for my study provides a brief view of state-level socio-economic variables in the United States, focusing on the years from 2016 to 2019. The dataset includes key metrics such as median earnings over the past 12 months, disaggregated by gender (male and female median earnings). Additionally, it encompasses various levels of higher educational attainment, including Associate degrees, Bachelor's degrees, Master's degrees, Professional school degrees, and Doctorate degrees. This dataset, sourced from the American Community Survey (ACS), is instrumental in analyzing trends and correlations between income levels and educational qualifications across all states. By employing the `get_acs` function with specified variables, years, and state-level geography, the dataset ensures detailed insights into these crucial socio-economic indicators, providing a foundation for in-depth analysis of educational and income disparities and trends across the United States.

## Column 

```{r}
DT::renderDataTable({
  DT::datatable(combined_df,
                extensions = 'Buttons',  # Ensure to include this
                options = list(
                  autoWidth = TRUE,
                  pageLength = 25,
                  scroller = TRUE,
                  scrollY = '450px',
                  dom = 'Bfrtip',  # This line is necessary to display buttons
                  buttons = c('copy', 'csv', 'excel', 'pdf', 'print')
                ),
                caption = htmltools::tags$caption(
                  style = 'caption-side: top; text-align: Left;')
  )
})
```




# Median Earning {data-orientation=columns}

## Column {data-width=100}

### About This Page
This page shows the median earning from 2016 to 2019. You can check different years by clicking the tab.

### Code
See the [plotting code on GitHub](https://github.com/jhu-statprogramming-fall-2023/biostat777-project4-YGAO0114/blob/main/data_loading%26analysis.Rmd).

## Column {data-width=250} {.tabset}
### Median Earning Map 2019 
![](plots/median_earning_map_2019.png){width=1000px}

### 2018 
![](plots/median_earning_map_2018.png){width=1000px}

### 2017
![](plots/median_earning_map_2017.png){width=1000px}

### 2016
![](plots/median_earning_map_2016.png){width=1000px}

# Higher Education Enrollment {data-orientation=columns}

## Column {data-width=100}

### About This Page
This page shows the enrollment in higher education (equal or higher than undergraduate) from 2016 to 2019. You can check different years by clicking the tab.

### Code
See the [plotting code on GitHub](https://github.com/jhu-statprogramming-fall-2023/biostat777-project4-YGAO0114/blob/main/data_loading%26analysis.Rmd).

## Column {data-width=250} {.tabset}
### Enrollment in Higher Education 2019

![](plots/Undergra_grad_Enroll_map_2019.png){width=1000px}

### 2018
![](plots/Undergra_grad_Enroll_map_2018.png){width=1000px}

### 2017
![](plots/Undergra_grad_Enroll_map_2017.png){width=1000px}

### 2016

![](plots/Undergra_grad_Enroll_map_2016.png){width=1000px}

# Yearly Change
## column 1 {.sidebar}
### 
```{r}
# Input for selecting multiple years
selectInput("yearInput",
            "Select Year(s):",
            choices = unique(combined_df$year),
            multiple = TRUE,
            selected = unique(combined_df$year))

# Input for selecting the state (NAME)
selectInput("stateInput", 
            "Select State(s):", 
            choices = unique(combined_df$NAME),
            multiple = TRUE,
            selected = c("California", "Maryland"))

```

## High level Education {.tabset}

### Bachelor Degree

```{r}
# Render Plot based on selections
output$myPlot0 <- renderPlot({
  input_data <- combined_df %>%
    filter(year %in% input$yearInput, NAME %in% input$stateInput)  # Adjust for multiple states
  
  # Adjusted plot
  ggplot(input_data, aes(x = factor(NAME), y = Bachelor_degreeE, fill = factor(year))) + 
    geom_bar(stat = "identity", position = "dodge") +
    theme_minimal() +
    labs(title = "Bachelor Degree Enrollment by Year and State",
         x = "State",
         y = "Enrollment",
         fill = "Year")
})

# Show the plot
plotOutput("myPlot0")
```

### Master Degree

```{r}
# Render Plot based on selections
output$myPlot1 <- renderPlot({
  input_data <- combined_df %>%
    filter(year %in% input$yearInput, NAME %in% input$stateInput)  # Adjust for multiple states
  
  # Adjusted plot
  ggplot(input_data, aes(x = factor(NAME), y = Master_degreeE, fill = factor(year))) + 
    geom_bar(stat = "identity", position = "dodge") +
    theme_minimal() +
    labs(title = "Bachelor Degree Enrollment by Year and State",
         x = "State",
         y = "Enrollment",
         fill = "Year")
})

# Show the plot
plotOutput("myPlot1")
```

### Doctorate Degree

```{r}
# Render Plot based on selections
output$myPlot2 <- renderPlot({
  input_data <- combined_df %>%
    filter(year %in% input$yearInput, NAME %in% input$stateInput)  # Adjust for multiple states
  
  # Adjusted plot
  ggplot(input_data, aes(x = factor(NAME), y = Doctorate_degreeE, fill = factor(year))) + 
    geom_bar(stat = "identity", position = "dodge") +
    theme_minimal() +
    labs(title = "Bachelor Degree Enrollment by Year and State",
         x = "State",
         y = "Enrollment",
         fill = "Year")
})

# Show the plot
plotOutput("myPlot2")
```

### Professional School Degree

```{r}
# Render Plot based on selections
output$myPlot3 <- renderPlot({
  input_data <- combined_df %>%
    filter(year %in% input$yearInput, NAME %in% input$stateInput)  # Adjust for multiple states
  
  # Adjusted plot
  ggplot(input_data, aes(x = factor(NAME), y = Professional_school_degreeE, fill = factor(year))) + 
    geom_bar(stat = "identity", position = "dodge") +
    theme_minimal() +
    labs(title = "Bachelor Degree Enrollment by Year and State",
         x = "State",
         y = "Enrollment",
         fill = "Year")
})

# Show the plot
plotOutput("myPlot3")
```



# Income&Education{data-orientation=columns}

## Top 10 States by Median Income
### Top 10 States by Median Income
```{r}

# Input for selecting the year
selectInput("incomeYearInput", 
            "Select Year:", 
            choices = unique(combined_df$year))

# Render the table for median income
output$incomeTable <- renderTable({
  top_income_data <- combined_df %>%
    filter(year == input$incomeYearInput) %>%
    arrange(desc(med_earnE)) %>%
    head(10)

  top_income_data[, c("NAME", "med_earnE")]
})

tableOutput("incomeTable")


```

## Top 10 States by Degree Enrollment {.tabset}
### Top 10 States by Bachelor Degree Enrollment
```{r}
selectInput("degreeYearInput", 
            "Select Year:", 
            choices = unique(combined_df$year))

output$degreeTable <- renderTable({
  selected_year <- input$degreeYearInput
  top_degree_data <- combined_df %>%
    filter(year == selected_year) %>%
    arrange(desc(Bachelor_degreeE)) %>%
    head(10)

  top_degree_data[, c("NAME", "Bachelor_degreeE")]
})
tableOutput("degreeTable")
```

### Top 10 States by Master Degree Enrollment
```{r}
selectInput("degreeYearInput", 
            "Select Year:", 
            choices = unique(combined_df$year))

output$degreeTable1 <- renderTable({
  selected_year <- input$degreeYearInput
  top_degree_data <- combined_df %>%
    filter(year == selected_year) %>%
    arrange(desc(Master_degreeE)) %>%
    head(10)

  top_degree_data[, c("NAME", "Master_degreeE")]
})
tableOutput("degreeTable1")
```

### Top 10 States by Doctorate Degree Enrollment
```{r}
selectInput("degreeYearInput", 
            "Select Year:", 
            choices = unique(combined_df$year))

output$degreeTable2 <- renderTable({
  selected_year <- input$degreeYearInput
  top_degree_data <- combined_df %>%
    filter(year == selected_year) %>%
    arrange(desc(Doctorate_degreeE)) %>%
    head(10)

  top_degree_data[, c("NAME", "Doctorate_degreeE")]
})
tableOutput("degreeTable2")
```

# Analysis {data-orientation=columns}

## column 1 {.sidebar}

Summary

Between 2016 and 2019, there was a notable upward trend in higher education enrollment across all states, accompanied by an increase in median earnings. Notably, California stood out with the highest median earnings and the most significant increase in higher education enrollment, specifically in the population attaining a bachelor's degree or higher. 

Additionally, coastal states, in general, were more likely to exhibit higher median earnings and greater levels of education enrollment. Furthermore, it was observed that states with higher median earnings typically also experienced higher rates of higher education enrollment


## column 2 {.tabset}
### 4-year Bachelor Degree Enrollment
```{r}
df_selected_years <- combined_df[combined_df$year %in% c(2016, 2017, 2018, 2019), ]
df_selected_years <- df_selected_years[with(df_selected_years, order(year, -Bachelor_degreeE)), ]
ggplot(df_selected_years, aes(x = reorder(NAME, -Bachelor_degreeE), y = Bachelor_degreeE, fill = factor(year))) +
  geom_bar(stat = "identity") +
  facet_grid(year ~ ., scales = "free_x") +  # Allowing individual x-axis labels for each plot
  scale_fill_brewer(palette = "Set1", name = "Year") +
  theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 6)) +  # Smaller state labels
  labs(x = "State", y = "Bachelor Degree Enrollment", title = "Bachelor Degree Enrollment by State (2016-2019)")
```

### 4-year Master Degree Enrollment
```{r}
df_selected_years <- combined_df[combined_df$year %in% c(2016, 2017, 2018, 2019), ]
df_selected_years <- df_selected_years[with(df_selected_years, order(year, -Master_degreeE)), ]
ggplot(df_selected_years, aes(x = reorder(NAME, -Master_degreeE), y = Master_degreeE, fill = factor(year))) +
  geom_bar(stat = "identity") +
  facet_grid(year ~ ., scales = "free_x") +  # Allowing individual x-axis labels for each plot
  scale_fill_brewer(palette = "Set1", name = "Year") +
  theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 6)) +  # Smaller state labels
  labs(x = "State", y = "Master Degree Enrollment", title = "Master Degree Enrollment by State (2016-2019)")
```

### 4-year Doctorate Degree Enrollment
```{r}
df_selected_years <- combined_df[combined_df$year %in% c(2016, 2017, 2018, 2019), ]
df_selected_years <- df_selected_years[with(df_selected_years, order(year, -Doctorate_degreeE)), ]
ggplot(df_selected_years, aes(x = reorder(NAME, -Doctorate_degreeE), y = Master_degreeE, fill = factor(year))) +
  geom_bar(stat = "identity") +
  facet_grid(year ~ ., scales = "free_x") +  # Allowing individual x-axis labels for each plot
  scale_fill_brewer(palette = "Set1", name = "Year") +
  theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 6)) +  # Smaller state labels
  labs(x = "State", y = "Doctorate Degree Enrollment", title = "Doctorate Degree Enrollment by State (2016-2019)")
```

## column 3 {.tabset}
### 4-year Median Earning
```{r}
df_selected_years <- combined_df[combined_df$year %in% c(2016, 2017, 2018, 2019), ]
df_selected_years <- df_selected_years[with(df_selected_years, order(year, -med_earnE)), ]
ggplot(df_selected_years, aes(x = reorder(NAME, -med_earnE), y = med_earnE, fill = factor(year))) +
  geom_bar(stat = "identity") +
  facet_grid(year ~ ., scales = "free_x") +  # Allowing individual x-axis labels for each plot
  scale_fill_brewer(palette = "Set1", name = "Year") +
  theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 6)) +  # Smaller state labels
  labs(x = "State", y = "Median Earning", title = "Median Earning by State (2016-2019)")
```
